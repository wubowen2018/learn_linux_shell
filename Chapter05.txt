************************************************************************************************************
------------------------------------------------------------------------------------------------------------
5.1 shell 的类型
	在/etc/passwd文件中，在用户ID记录的第7个字段中列出了默认的shell程序。
	root:x:0:0:root:/root:/bin/bash
	
	【 tcsh dash csh 】

------------------------------------------------------------------------------------------------------------	
5.2 shell 的父子关系
	在CLI提示符后输入 /bin/bash 命令或其他等效的 bash 命令时， 会创建一个新的shell程序。
	这个shell程序被称为子shell（child shell） 。
	
	 ps --forest 命令展示子shell间的嵌套结构。
		$ ps --forest
		PID TTY TIME CMD
		1841 pts/0 00:00:00 bash
		2533 pts/0 00:00:00   \_ bash
		2546 pts/0 00:00:00        \_ bash
		2562 pts/0 00:00:00             \_ bash
		2576 pts/0 00:00:00                  \_ ps
		
	【 ps -f 命令也能够表现子shell的嵌套关系，因为它能够通过PPID列显示出谁是谁的父进程。】
		
	bash命令行参数
		-c string  -->  从 string 中读取命令并进行处理
		-i  -->  启动一个能够接收用户输入的交互shell
		-l  -->  以登录shell的形式启动
		-r  -->  启动一个受限shell，用户会被限制在默认目录中
		-s  -->  从标准输入中读取命令

	1、进程列表
		命令列表要想成为进程列表，这些命令必须包含在括号里。
			$ (pwd ; ls ; cd /etc ; pwd ; cd ; pwd ; ls)
			
		另一种命令分组是将命令放入花括号中，并在命令列表尾部加上分号（;）。
		语法为 { command; } 。使用花括号进行命令分组并不会像进程列表那样创建出子shell。
		
		echo $BASH_SUBSHELL 如果为0说明没有创建子shell   不为0则是创建了子shell
		
		【 命令列表中嵌套括号来创建子shell的子shell。】
		$ ( pwd ; (echo $BASH_SUBSHELL))
		/home/Christine
		2
		
	2、使用子shell
		1.后台模式  --  【 & 】
			在命令的末尾加上&
			$ sleep 3000&
			[1] 2396
			$ ps -f
			UID PID PPID C STIME TTY TIME CMD
			christi+ 2338 2337 0 10:13 pts/9 00:00:00 -bash
			christi+ 2396 2338 0 10:17 pts/9 00:00:00 sleep 3000
			christi+ 2397 2338 0 10:17 pts/9 00:00:00 ps -f
			
		2. jobs 命令可以显示出当前运行在后台模式中的所有用户的进程（作业） 。
			
		3.将进程列表置入后台
			$ (tar -cf Rich.tar /home/rich ; tar -cf My.tar /home/christine)&
			[3] 2423
			
		4.协程  --  【 coproc 】
			协程可以同时做两件事。它在后台生成一个子shell，并在这个子shell中执行命令。
			使用 coproc 命令
				$ coproc sleep 10
				[1] 2544
				
			使用命令给自己的协程起名字	
				$ coproc My_Job { sleep 10; }
				[1] 2570
				
------------------------------------------------------------------------------------------------------------
5.3 理解shell的内建命令
	1、外部命令
		ps 就是一个外部命令。你可以使用 which 和 type 命令找到它
			$ which ps
			/bin/ps
			$
			$ type -a ps
			ps is /bin/ps
			$
			$ whereis ps
			ps: /bin/ps /usr/share/man/man1p/ps.1p.gz /usr/share/man/man1/ps.1.gz
			$
			$ ls -l /bin/ps
			-rwxr-xr-x 1 root root 93232 Jan 6 18:32 /bin/ps
			
	2、内建命令
		1. 使用 history 命令  --  【 查看最近用过的命令列表 】
			!!   作用相当于按方向键上 并回车
			！20  找回history的第20条命令并执行
		
		2.可以在退出shell会话之前强制将命令历史记录写入.bash_history文件。
		要实现强制写入，需要使用 history 命令的 -a选项。
		
		3.命令别名  --  【 alias 】
			alias userDefineName bashAndItem
			查看当前可用的别名，使用 alias 命令以及选项 -p 。
			$alias li='ls -li'
			【 别名只能在别名被定义的bash中使用 】
			
		shell在执行前会先加载一个文件，~/.bashrc,并执行里面的脚本，所以可以把别名设置加在里面，这样每一次
		启动shell都设置好了别名。别忘记更新一下 $source ~/.bashrc
			
			
			
				
				
		
		
	




















