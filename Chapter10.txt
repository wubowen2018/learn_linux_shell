************************************************************************************************************
------------------------------------------------------------------------------------------------------------
10.1vim 编辑器
	$which vim
	/usr/bin/vim
	
	vim在内存缓冲区处理数据
	
	vim编辑器有两种操作模式
		普通模式  --  vim编辑器会将按键解释成命令
		插入模式  --  vim会将你在当前光标位置输入的每个键都插入到缓冲区
		命令行模式  --  在普通模式下键入冒号：进入命令行模式
		
	命令行模式
		q ：如果未修改缓冲区数据，退出。           #退出
		q! ：取消所有对缓冲区数据的修改并退出。	   #不保存，退出
		w filename ：将文件保存到另一个文件中。    #另存为
		wq ：将缓冲区数据保存到文件中并退出。      #保存并退出
		
		x   -->   删除当前光标所在位置的字符
		dd   -->   删除当前光标所在行
		dw   -->   删除当前光标所在位置的单词
		d$   -->   删除当前光标所在位置至行尾的内容
		J   -->   删除当前光标所在行行尾的换行符（拼接行）
		u   -->   撤销前一编辑命令
		a   -->   在当前光标后追加数据
		A   -->   在当前光标所在行行尾追加数据
		r char   -->   用 char 替换当前光标所在位置的单个字符
		R text   -->   用 text 覆盖当前光标所在位置的数据，直到按下ESC键
		
	赋值和粘贴
		【 vim在删除数据时，实际上会将数据保存在单独的一个寄存器中。可以用 p 命令取回数据。】
		
	剪切和粘贴
		用dd或者dw，x删除的内容会被vim放到一个寄存器中（剪切），可以使用p命令找回（粘贴）。
	
	复制文本
		复制的命令式y，（yw复制一个单词，y$复制到行尾），复制后将光标移动到想要粘贴的位置，使用p命令。
		
	可视模式
		可视模式下复制，将光标移动到想要复制文本的开始位置，按下v键，移动光标覆盖想要复制的文本，使用y
		激活复制，内容就复制到寄存器了，到想要粘贴的位置用p命令粘贴。
		可视模式下的剪切，删除同理。
	
	查找和替换
		按下/键查找，vim有三种方式回应
			如果要查找的文本出现在光标当前位置之后，则光标会跳到该文本出现的第一个位置。
			如果要查找的文本未在光标当前位置之后出现，则光标会绕过文件末尾，出现在该文本所在的第一个位置
			输出一条错误消息，说明在文件中没有找到要查找的文本。
		替换命令
			s/old/new
		
			
		
		
	
	



































