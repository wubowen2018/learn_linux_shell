************************************************************************************************************
------------------------------------------------------------------------------------------------------------
Linux沿用了Unix文件权限的办法，即允许用户和组根据每个文件和目录的安全性设置来访问文件。
7.1Linux 的安全性
	1、用户对系统中各种对象的访问权限取决于他们登录系统时用的账户。
	
	2、UID
		创建用户时分配用户ID User ID 简称UID，UID具有唯一性;
		用户的权限通过UID来追踪；
		但登录系统时用的不是UID，而是登录名(最长8字符)，同时关联对应的密码；
		
	3、/etc/passwd 文件
		/etc/passwd用户登录名匹配到UID的专门文件；
		root用户账户是Linux系统的管理员，固定分配给它的UID是 0；
		Linux系
		
		统会为各种各样的功能创建不同的用户账户，而这些账户并不是真的用户。
		这些账户叫作系统账户，是系统上运行的各种服务进程访问资源用的特殊账户。
		
		root:      x:          0:        0:     root:         /root:       /bin/bash
		登录名，[用户密码，]账户UID，账户GID,账户文本描述，账户home的位置，默认的shell
		
		
	4、/etc/shadow 文件
		专门保存加密后的密码，
		为每一个用户产生一条记录，
		每一条记录有九个字段
	
	5、添加新用户  --  【  useradd 】
		1.使用useradd -D 命令查看添加用户的系统默认参数，这些文件保存在/etc/default/useradd文件中
			新用户会被添加到GID为 100 的公共组；
			新用户的HOME目录将会位于/home/loginname；
			新用户账户密码在过期后不会被禁用；
			新用户账户未被设置过期日期；
			新用户账户将bash shell作为默认shell；
			【系统会将/etc/skel目录下的内容复制到用户的HOME目录下】；
			系统为该用户账户在mail目录下创建一个用于接收邮件的文件
			
			Linux允许管理员创建一份新建用户的模板，然后通过这个模板创建新用户。
			模板就是/etc/skel目录
		
		2.默认情况下， useradd 命令不会创建HOME目录， 但是 -m 命令行选项会使其创建HOME目录。
			useradd 命令创建了新HOME目录，并将/etc/skel目录中的文件复制了过来。
			
		3.useradd的命令行参数
			-c comment   -->   给新用户添加备注
			-d home_dir   -->   为主目录指定一个名字（如果不想用登录名作为主目录名的话）
			-e expire_date   -->   用YYYY-MM-DD格式指定一个账户过期的日期
			-f inactive_days   -->   指定这个账户密码过期后多少天这个账户被禁用； 
									 0 表示密码一过期就立即禁用， 1 表示禁用这个功能
			-g initial_group   -->   指定用户登录组的GID或组名
			-G group ...   -->   指定用户除登录组之外所属的一个或多个附加组
			-k   -->   必须和 -m 一起使用，将/etc/skel目录的内容复制到用户的HOME目录
			-m   -->   创建用户的HOME目录
			-M   -->   不创建用户的HOME目录（当默认设置里要求创建时才使用这个选项）
			-n   -->   创建一个与用户登录名同名的新组
			-r   -->   创建系统账户
			-p passwd   -->   为用户账户指定默认密码
			-s shell   -->   指定默认的登录shell
			-u uid   -->   为账户指定唯一的UID
		
		4.useradd修改默认值的参数
			-b default_home   -->   更改默认的创建用户HOME目录的位置
			-e expiration_date   -->   更改默认的新账户的过期日期
			-f inactive   -->   更改默认的新用户从密码过期到账户被禁用的天数
			-g group   -->   更改默认的组名称或GID
			-s shell   -->   更改默认的登录shell
				
	6、删除用户  --  【 userdel 】
		默认情况下，userdel只会删除/etc/passwd中的用户信息，不会删除属于这个账户的任何文件。
		如果加上 -r 参数， userdel 会删除用户的HOME目录以及邮件目录。
		
	7、修改用户
		            【 修改用户的工具 】
			usermod  -->  修改用户账户的字段，还可以指定主要组以及附加组的所属关系
			passwd  -->  修改已有用户的密码
			chpasswd  -->  从文件中读取登录名密码对，并更新密码
			chage  -->  修改密码的过期日期
			chfn  -->  修改用户账户的备注信息
			chsh  -->  修改用户账户的默认登录shell
			
		1.usermod
			
------------------------------------------------------------------------------------------------------------
7.3文件权限
	1、文件类型
		- 代表文件
		d 代表目录
		l 代表链接
		c 代表字符型设备
		b 代表块设备
		n 代表网络设备
		s socket文件
		p 管道文件
	
	2、-rwxrwxr-x 1 rich rich 4882 2010-09-18 13:58 myprog
		rwx ：文件的属主（设为登录名rich） 。
		rwx ：文件的属组（设为组名rich） 。
		r-x ：系统上其他人
	
		-rwx rwx r-x
		 111 111 101
		  7   7   5
	
	3、默认文件权限  --  【 umask 】
		$umask  ##只是一个掩码，拿文件的全权限减去它得到文件的真是权限
		0022
		
		0 - 第一位代表了一项特别的安全特性，叫作粘着位（sticky bit） 
		002 - 后面的3位表示文件或目录对应的 umask 八进制值
		
------------------------------------------------------------------------------------------------------------
7.4改变安全性设置
	1、改变权限
		chmod options mode file
			
		1.mod可以使用八进制
			$ chmod 760 newfile
			$ ls -l newfile
			-rwxrw---- 1 rich rich 0 Sep 20 19:16 newfile
			
		2.也可以用符号
			[ugoa…][[+-=][rwxXstugo…]
			
			第一个中括号
				u 代表用户
				g 代表组
				o 代表其他
				a 代表上述所有
			第二个中括号
				在现有权限基础上增加权限（+）
				还是在现有权限基础上移除权限（-）
				或是将权限设置成后面的值（=） 
			第三个中括号
				X ：如果对象是目录或者它已有执行权限，赋予执行权限。
				s ：运行时重新设置UID或GID
				t ：保留文件或目录
				u ：将权限设置为跟属主一样
				g ：将权限设置为跟属组一样
				o ：将权限设置为跟其他用户一样
			
	2、改变所属关系
		chown options owner[.group] file
			
------------------------------------------------------------------------------------------------------------
7.5共享文件
	详见7.5
		
		
		
		
	

























